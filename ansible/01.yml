---
- name: dilate wireguard
  hosts: sfw
  remote_user: root
  gather_facts: false
  tasks:
    - name: create wireguard dir
      ansible.builtin.file:
        path: /wg
        state: directory
    - name: generate wireguard keys
      ansible.builtin.shell:
        cmd: "wg genkey | (umask 0077 && tee keyprivate) | wg pubkey > keypublic"
        chdir: /wg
    - name: backup wireguard private keys
      ansible.builtin.fetch:
        src: /wg/keyprivate
        dest: ./tmp
    - name: backup wireguard public keys
      ansible.builtin.fetch:
        src: /wg/keypublic
        dest: ./tmp

    - name: set other host list
      set_fact:
        other_host_list: "{{ ansible_play_hosts | difference([inventory_hostname]) }}"

    - name: make peer dirs
      ansible.builtin.file:
        path: "/wg/{{ item }}"
        state: directory
      loop: "{{ other_host_list }}"

    - name: copy peer public keys
      ansible.builtin.copy:
        src: "./tmp/{{ item }}/wg/keypublic"
        dest: "/wg/{{ item }}/keypublic"
      loop: "{{ other_host_list }}"

    - name: configure wireguard
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = {{ sfwip }}/24
          ListenPort = 51871
          PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/wg/keyprivate') }}
          # DEADBEEF
        dest: "/etc/wireguard/wg0.conf"

    - name: configure wireguard peers
      ansible.builtin.blockinfile:
        insertafter: "DEADBEEF"
        path: "/etc/wireguard/wg0.conf"
        block: |
          [Peer]
          PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + item + '/wg/keypublic') }}
          AllowedIPs = {{ hostvars[item].sfwip }}/32
          Endpoint = {{ item }}:51871
      loop: "{{ other_host_list }}"

    - name: connect to sfwvpn
      ansible.builtin.systemd_service:
        name: "wg-quick@wg0"
        state: restarted
        enabled: true
