---
- name: disable firewall, configure sudo, configure swap, update, install packages, reboot
  hosts: sfw_manager:sfw_node
  remote_user: root
  # gather_facts: no
  vars:
    reboot: False
  tasks:

###############################################################################
## debugging

    # - name: debug
    #   debug:
    #     var: reboot

    # - name: debug
    #   meta: end_play

##############################################################################
## firewall

    - name: populate service facts
      ansible.builtin.service_facts:
    # todo standard ufw settings no work with wireguard
    - name: disable firewall
      ansible.builtin.systemd_service:
        name: ufw.service
        enabled: false
        state: stopped
      when: ansible_facts.services['ufw.service'] is defined

##############################################################################
## sudo

    - name: configure sudo
      ansible.builtin.blockinfile:
        path: /etc/sudoers.d/ansible-sudoers
        block: "%sudo ALL=(ALL:ALL) NOPASSWD: ALL"
        marker: "# {mark} sudo {{ inventory_hostname }}"
        create: true
        backup: yes

###############################################################################
## swap

    ## todo check free instead of file path
    - name: check if u have swap
      ansible.builtin.stat:
        path: "/swapfile"
      register: stat_swap
    - name: create swapfile
      ansible.builtin.shell:
        # chdir: /home/sfw/sfw
        cmd: "dd if=/dev/zero of=/swapfile bs=1M count=1k status=progress"
      when: not stat_swap.stat.exists
    - name: chmod swapfile
      ansible.builtin.shell:
        cmd: "chmod 0600 /swapfile"
      when: not stat_swap.stat.exists
    - name: make swap
      ansible.builtin.shell:
        cmd: "mkswap -U clear /swapfile"
      when: not stat_swap.stat.exists
    - name: enable swap
      ansible.builtin.shell:
        cmd: "swapon /swapfile"
      when: not stat_swap.stat.exists
    - name: add swap to fstab
      ansible.builtin.blockinfile:
        path: /etc/fstab
        marker: "# {mark} swap {{ inventory_hostname }}"
        block: |
          /swapfile none swap defaults 0 0
      when: not stat_swap.stat.exists

###############################################################################
## update

    - name: update apt cache
      ansible.builtin.apt:
        update_cache: yes
    - name: full system upgrade
      ansible.builtin.apt:
        name: "*"
        state: latest

###############################################################################
## docker

    - name: install ca-certs for docker
      ansible.builtin.apt:
        name: ca-certificates
        state: present
    - name: download docker apt keyring
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
    - name: configure docker apt repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
    - name: update apt cache
      ansible.builtin.apt:
        update_cache: yes
    - name: install apt packages
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          # - docker-buildx-plugin
          # - docker-compose-plugin
    - name: add sfw user to docker group
      ansible.builtin.user:
        name: sfw
        groups: docker


###############################################################################
## golang

    # todo use ansible.cfg variable
    # todo dont download golang every time
    - name: download golang
      ansible.builtin.get_url:
        url: https://go.dev/dl/go1.22.0.linux-amd64.tar.gz
        dest: /root/
      register: golang

    - name: remove debian golang package
      ansible.builtin.apt:
        state: absent
        pkg:
          - golang
          - golang-go
      when: golang.changed

    - name: install make
      ansible.builtin.apt:
        name: make
        state: present
      when: golang.changed

    - name: install golang
      ansible.builtin.shell: 
        chdir: /root
        cmd: "rm -rf /usr/local/go && tar -C /usr/local -xzf go1.22.0.linux-amd64.tar.gz"
      when: golang.changed

    # todo this doesnt work for ansible tasks
    - name: add golang to path
      ansible.builtin.blockinfile:
        path: /etc/profile
        marker: "# {mark} golang bin {{ inventory_hostname }}"
        block: |
          PATH=$PATH:/usr/local/go/bin
      when: golang.changed

###############################################################################
## reboot

    - name: check if the computer has ever rebooted
      ansible.builtin.stat:
        path: /root/has_rebooted
      register: stat_rebooted

    - name: reboot
      ansible.builtin.reboot:
      when: reboot or (not stat_rebooted.stat.exists)

    - name: remember this computer has rebooted
      ansible.builtin.file:
        path: /root/has_rebooted
        state: touch
      when: not stat_rebooted.stat.exists
