---
- name: dilate wireguard 1
  hosts: sfw
  remote_user: root
  tasks:
    - name: create wireguard dir
      ansible.builtin.file:
        path: /wg
        state: directory
    - name: generate wireguard keys
      ansible.builtin.shell:
        cmd: "wg genkey | (umask 0077 && tee keyprivate) | wg pubkey > keypublic"
        chdir: /wg
    - name: backup wireguard private keys
      ansible.builtin.fetch:
        src: /wg/keyprivate
        dest: ./tmp
    - name: backup wireguard public keys
      ansible.builtin.fetch:
        src: /wg/keypublic
        dest: ./tmp

- name: dilate wireguard 2
  hosts: sfw_manager
  remote_user: root
  tasks:
    - name: set other host list
      set_fact:
        other_host_list: "{{ groups['sfw'] | difference([inventory_hostname]) }}"

    - name: make peer dirs
      ansible.builtin.file:
        path: "/wg/{{ item }}"
        state: directory
      loop: "{{ other_host_list }}"

    - name: copy peer public keys
      ansible.builtin.copy:
        src: "./tmp/{{ item }}/wg/keypublic"
        dest: "/wg/{{ item }}/keypublic"
      loop: "{{ other_host_list }}"

    - name: configure manager wireguard
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = {{ sfwip }}/24
          ListenPort = 51871
          PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/wg/keyprivate') }}
          # peers
        dest: "/etc/wireguard/wg0.conf"

    - name: configure manager wireguard peers
      ansible.builtin.blockinfile:
        insertafter: "# peers"
        path: "/etc/wireguard/wg0.conf"
        block: |
          [Peer]
          PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + item + '/wg/keypublic') }}
          AllowedIPs = {{ hostvars[item].sfwip }}/32
          Endpoint = {{ item }}:51871
        marker: "# {mark} peer {{ item }}"
      loop: "{{ other_host_list }}"

- name: dilate wireguard 3
  hosts: sfw_node
  remote_user: root
  tasks:
    - name: make peer dir
      ansible.builtin.file:
        path: "/wg/{{ item }}"
        state: directory
      when: hostvars[item].sfwip == "10.0.0.10"
      loop: "{{ groups['sfw'] }}"

    - name: download peer public key for manager
      ansible.builtin.copy:
        src: "./tmp/{{ item }}/wg/keypublic"
        dest: "/wg/{{ item }}/keypublic"
      when: hostvars[item].sfwip == "10.0.0.10"
      loop: "{{ groups['sfw'] }}"

    - name: configure wireguard for node
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = {{ sfwip }}/24
          ListenPort = 51871
          PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/wg/keyprivate') }}
          # peers
        dest: "/etc/wireguard/wg0.conf"

    - name: configure wireguard peers for node
      ansible.builtin.blockinfile:
        insertafter: "# peers"
        path: "/etc/wireguard/wg0.conf"
        block: |
          [Peer]
          PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + item + '/wg/keypublic') }}
          AllowedIPs = {{ hostvars[item].sfwip }}/32
          Endpoint = {{ item }}:51871
        marker: "# {mark} peer {{ item }}"
      when: hostvars[item].sfwip == "10.0.0.10"
      loop: "{{ groups['sfw'] }}"

- name: dilate wireguard 4
  hosts: sfw
  remote_user: root
  tasks:
    - name: enable custom wireguard service
      ansible.builtin.systemd_service:
        name: "wg-quick@wg0"
        state: restarted
        enabled: true
