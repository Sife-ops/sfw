---
- name: generate wireguard keys
  hosts: sfw_dev
  remote_user: root
  tasks:
    # todo put wireguard keys on local
    - name: create wireguard dir
      ansible.builtin.file:
        path: /wg
        state: directory
    - name: generate wireguard keys
      ansible.builtin.shell:
        cmd: "wg genkey | (umask 0077 && tee keyprivate) | wg pubkey > keypublic"
        chdir: /wg
    - name: backup wireguard private keys
      ansible.builtin.fetch:
        src: /wg/keyprivate
        dest: ./tmp
    - name: backup wireguard public keys
      ansible.builtin.fetch:
        src: /wg/keypublic
        dest: ./tmp

- name: set up wireguard for manager
  hosts: sfw_manager_dev
  remote_user: root
  tasks:
    - name: delete known hosts
      ansible.builtin.file:
        path: /home/sfw/.ssh/known_hosts
        state: absent

    - name: set peers
      set_fact:
        peers: "{{ groups['sfw_dev'] | difference([inventory_hostname]) }}"

    - name: copy node public keys
      ansible.builtin.file:
        path: "/wg/{{ item }}"
        state: directory
      loop: "{{ peers }}"

    - name: copy node public keys
      ansible.builtin.copy:
        src: "./tmp/{{ item }}/wg/keypublic"
        dest: "/wg/{{ item }}/keypublic"
      loop: "{{ peers }}"

    - name: configure wireguard for manager
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = {{ sfwip }}/24
          ListenPort = 51871
          PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/wg/keyprivate') }}
          # peers
        dest: "/etc/wireguard/wg0.conf"

    - name: configure wireguard peers for manager
      ansible.builtin.blockinfile:
        insertafter: "# peers"
        path: "/etc/wireguard/wg0.conf"
        block: |
          [Peer]
          PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + item + '/wg/keypublic') }}
          AllowedIPs = {{ hostvars[item].sfwip }}/32
          Endpoint = {{ item }}:51871
        marker: "# {mark} peer {{ item }}"
      loop: "{{ peers }}"

- name: set up wireguard for nodes
  hosts: sfw_node_dev
  remote_user: root
  tasks:
    - name: copy manager public key
      ansible.builtin.file:
        path: "/wg/{{ item }}"
        state: directory
      when: hostvars[item].sfwip == "10.0.0.10"
      loop: "{{ groups['sfw_dev'] }}"

    - name: copy manager public key
      ansible.builtin.copy:
        src: "./tmp/{{ item }}/wg/keypublic"
        dest: "/wg/{{ item }}/keypublic"
      when: hostvars[item].sfwip == "10.0.0.10"
      loop: "{{ groups['sfw_dev'] }}"

    - name: configure wireguard for node
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = {{ sfwip }}/24
          ListenPort = 51871
          PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/wg/keyprivate') }}
          # peers
        dest: "/etc/wireguard/wg0.conf"

    - name: configure wireguard manager for node
      ansible.builtin.blockinfile:
        insertafter: "# peers"
        path: "/etc/wireguard/wg0.conf"
        block: |
          [Peer]
          PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + item + '/wg/keypublic') }}
          AllowedIPs = {{ hostvars[item].sfwip }}/32
          Endpoint = {{ item }}:51871
        marker: "# {mark} peer {{ item }}"
      when: hostvars[item].sfwip == "10.0.0.10"
      loop: "{{ groups['sfw_dev'] }}"

- name: enable wireguard
  hosts: sfw_dev
  remote_user: root
  tasks:
    - name: enable custom wireguard service
      ansible.builtin.systemd_service:
        name: "wg-quick@wg0"
        state: restarted
        enabled: true
