---
- name: populate parameters
  set_fact:
    params: "{{ hostvars[inventory_hostname][profile] | default({ 'role': 'client', 'ignore': True }) }}"

- name: populate server parameters
  set_fact:
    server_params: "{{ hostvars[item][profile] }}"
    server_hostname: "{{ item }}"
  loop: "{{ groups['all'] }}"
  when: hostvars[item][profile].role | default('client') == 'server'

- name: set peers
  set_fact:
    peers: "{{ peers | default([]) + [item] }}"
  loop: "{{ groups['all'] }}"
  when: hostvars[item][profile] is defined

###############################################################################
## install & gen keys

- name: install wireguard tools
  ansible.builtin.package:
    name: wireguard-tools
    state: present
  when: not params.ignore | default(False)

- name: create wireguard dir
  ansible.builtin.file:
    path: /tmp/wg
    state: directory
  when: not params.ignore | default(False)

- name: generate wireguard keys
  ansible.builtin.shell:
    cmd: "wg genkey | (umask 0077 && tee keyprivate) | wg pubkey > keypublic"
    chdir: /tmp/wg
  when: not params.ignore | default(False)

- name: backup wireguard private keys
  ansible.builtin.fetch:
    src: /tmp/wg/keyprivate
    dest: ./tmp
  when: not params.ignore | default(False)

- name: backup wireguard public keys
  ansible.builtin.fetch:
    src: /tmp/wg/keypublic
    dest: ./tmp
  when: not params.ignore | default(False)

###############################################################################
## dilate server

- name: configure wireguard for server
  ansible.builtin.copy:
    content: |
      [Interface]
      Address = {{ server_params.ip }}/24
      ListenPort = {{ server_params.port }}
      PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/tmp/wg/keyprivate') }}
      # peers
    dest: "/etc/wireguard/{{ profile }}.conf"
  when: params.role == 'server'

- name: configure wireguard peers for server
  ansible.builtin.blockinfile:
    path: "/etc/wireguard/{{ profile }}.conf"
    insertafter: "# peers"
    marker: "# {mark} peer {{ item }}"
    block: |
      [Peer]
      PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + item + '/tmp/wg/keypublic') }}
      AllowedIPs = {{ hostvars[item][profile].ip }}/32
      Endpoint = {{ (hostvars[item][profile].peer_ip | default('') | length > 0) | ternary(hostvars[item][profile].peer_ip, item) }}:{{ server_params.port }}
  loop: "{{ peers | difference([inventory_hostname]) }}"
  when: params.role == 'server'

###############################################################################
## dilate clients

- name: configure wireguard for client
  ansible.builtin.copy:
    dest: "/etc/wireguard/{{ profile }}.conf"
    content: |
      [Interface]
      Address = {{ params.ip }}/24
      ListenPort = {{ server_params.port }}
      PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/tmp/wg/keyprivate') }}
      # peers
  when: params.role == 'client' and not params.ignore | default(False)

- name: configure wireguard peer for client
  ansible.builtin.blockinfile:
    path: "/etc/wireguard/{{ profile }}.conf"
    insertafter: "# peers"
    marker: "# {mark} peer {{ server_hostname }}"
    block: |
      [Peer]
      PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + server_hostname + '/tmp/wg/keypublic') }}
      AllowedIPs = {{ server_params.ip }}/32
      Endpoint = {{ server_hostname }}:{{ server_params.port }}
  when: params.role == 'client' and not params.ignore | default(False)

###############################################################################
## start

- name: start & enable wireguard service
  ansible.builtin.systemd_service:
    name: "wg-quick@{{ profile }}"
    state: restarted
    enabled: true
  when: not params.ignore | default(False)
