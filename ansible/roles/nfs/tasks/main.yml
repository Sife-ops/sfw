---
- name: populate server parameters
  set_fact:
    server_params: "{{ hostvars[item][profile] }}"
  loop: "{{ groups['all'] }}"
  when: hostvars[item][profile].role | default('client') == 'server'

- name: populate host parameters
  set_fact:
    params: "{{ hostvars[inventory_hostname][profile] | default({ 'ignore': True }) }}"

- name: install nfs server
  ansible.builtin.package:
    name: nfs-kernel-server
    state: present
  when: params.role | default('') == 'server'

- name: install nfs utilities
  ansible.builtin.package:
    name: nfs-common
    state: present
  when: params.role | default('') == 'client' and not params.ignore | default(False) and ansible_facts['os_family'] == 'Debian'

- name: create nfs export dir
  ansible.builtin.file:
    path: "/var/nfs/{{ profile }}"
    state: directory
    owner: nobody # todo use sfw?
    group: nogroup # todo use sudo?
    mode: '0777'
  when: params.role | default('') == 'server'

- name: configure nfs
  ansible.builtin.blockinfile:
    path: /etc/exports
    create: true
    mode: '0644'
    marker: "# {mark} nfs {{ inventory_hostname }}"
    block: |
      /var/nfs/{{ profile }} {{ server_params.allowed }}(rw,sync,no_subtree_check)
  when: params.role | default('') == 'server'

- name: start/enable nfs
  ansible.builtin.systemd_service:
    name: nfs-kernel-server
    enabled: true
    state: restarted
  when: params.role | default('') == 'server'

- name: mount nfs export
  ansible.posix.mount:
    path: "/tmp/{{ profile }}"
    src: "{{ server_params.host }}:/var/nfs/{{ profile }}"
    fstype: nfs
    opts: vers=4
    state: "{{ params.state | default('mounted') }}"
  when: params.role | default('') == 'client' and not params.ignore | default(False)
