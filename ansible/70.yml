---
- name: manager setup [oneshot] [debian]
  hosts: sfw_manager
  remote_user: root
  tasks:

    # - name: stop
    #   meta: end_play

    ## todo check free instead of file path
    - name: check if u have swap
      ansible.builtin.stat:
        path: "/swapfile"
      register: stat_swap

    - name: create swapfile
      ansible.builtin.shell:
        # chdir: /home/sfw/sfw
        cmd: "dd if=/dev/zero of=/swapfile bs=1M count=1k status=progress"
      when: not stat_swap.stat.exists

    - name: chmod swapfile
      ansible.builtin.shell:
        cmd: "chmod 0600 /swapfile"
      when: not stat_swap.stat.exists

    - name: make swap
      ansible.builtin.shell:
        cmd: "mkswap -U clear /swapfile"
      when: not stat_swap.stat.exists

    - name: enable swap
      ansible.builtin.shell:
        cmd: "swapon /swapfile"
      when: not stat_swap.stat.exists

    - name: add swap to fstab
      ansible.builtin.blockinfile:
        path: /etc/fstab
        block: |
          /swapfile none swap defaults 0 0
      when: not stat_swap.stat.exists

###############################################################################
###############################################################################
###############################################################################

    - name: full system upgrade
      ansible.builtin.apt:
        name: "*"
        state: latest

    - name: install ca-certs (docker)
      ansible.builtin.apt:
        name: ca-certificates
        state: present

    - name: download docker apt keyring
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc

    - name: configure docker apt repository
      ansible.builtin.apt_repository:
        # repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/myrepo.asc] https://download.example.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable"
        state: present

    - name: update apt cache (docker)
      ansible.builtin.apt:
        update_cache: yes

    - name: install manager tools
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          # - make
          # - golang
          - ansible
          - tmux
          - postgresql-client
          - python3-psycopg
          - wireguard-tools

    # # todo MUST FETCH FROM GH
    # # todo MUST FETCH FROM GH
    # # todo MUST FETCH FROM GH
    # - name: install loggerino
    #   remote_user: sfw
    #   ansible.builtin.copy:
    #     src: ../bin/loggerino
    #     dest: /home/sfw/loggerino
    #     mode: +x

###############################################################################
## TODO NOT DRY TODO NOT DRY TODO NOT DRY TODO NOT DRY TODO NOT DRY  TODO NO ##
###############################################################################

    - name: create sfw user
      ansible.builtin.user:
        name: sfw
        group: sudo
        groups: docker
        generate_ssh_key: yes

    - name: install local pubkey on sfw user
      ansible.builtin.blockinfile:
        block: "{{ lookup('ansible.builtin.file', lookup('ansible.builtin.env', 'HOME') + '/.ssh/id_rsa.pub') }}"
        path: /home/sfw/.ssh/authorized_keys
        backup: yes

    - name: configure sudo
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: "%sudo.*ALL=(ALL:ALL).*ALL"
        line: "%sudo ALL=(ALL:ALL) NOPASSWD: ALL"

    - name: reboot
      ansible.builtin.reboot:

- import_playbook: 02.yml