---
- name: generate wireguard keys
  hosts: self:sfw
  remote_user: root
  tasks:

    - name: install wireguard tools
      ansible.builtin.package:
        name: wireguard-tools
        state: present

    # todo put wireguard keys on local
    - name: create wireguard dir
      ansible.builtin.file:
        path: /tmp/wg
        state: directory
    - name: generate wireguard keys
      ansible.builtin.shell:
        cmd: "wg genkey | (umask 0077 && tee keyprivate) | wg pubkey > keypublic"
        chdir: /tmp/wg
    - name: backup wireguard private keys
      ansible.builtin.fetch:
        src: /tmp/wg/keyprivate
        dest: ./tmp
    - name: backup wireguard public keys
      ansible.builtin.fetch:
        src: /tmp/wg/keypublic
        dest: ./tmp

- name: set up wireguard for manager
  hosts: sfw_manager
  remote_user: root
  tasks:

###############################################################################
## debugging

    # - name: lmao
    #   debug:
    #     var: peers

    # - name: end
    #   meta: end_play

###############################################################################
## 

    - name: configure wireguard for manager
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = {{ sfwip }}/24
          ListenPort = 51871
          PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/tmp/wg/keyprivate') }}
          # peers
        dest: "/etc/wireguard/wg0.conf"

    - name: configure wireguard peers for manager
      ansible.builtin.blockinfile:
        insertafter: "# peers"
        path: "/etc/wireguard/wg0.conf"
        block: |
          [Peer]
          PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + item + '/tmp/wg/keypublic') }}
          AllowedIPs = {{ hostvars[item].sfwip }}/32
          Endpoint = {{ (item == 'localhost') | ternary(hostvars[item].wanip, item) }}:51871
        marker: "# {mark} peer {{ item }}"
      loop: "{{ groups['sfw_node'] + groups['self'] }}"

- name: set up wireguard for nodes
  hosts: self:sfw_node
  remote_user: root
  become: true
  tasks:

###############################################################################
## debugging

    # - name: lmao
    #   debug:
    #     var: inventory_hostname

    # - name: end
    #   meta: end_play

###############################################################################
## 

    - name: configure wireguard for node
      # become: true
      ansible.builtin.copy:
        content: |
          [Interface]
          Address = {{ sfwip }}/24
          ListenPort = 51871
          PrivateKey = {{ lookup('ansible.builtin.file', './tmp/' + inventory_hostname + '/tmp/wg/keyprivate') }}
          # peers
        dest: "/etc/wireguard/wg0.conf"

    - name: configure wireguard peer for node
      # become: true
      ansible.builtin.blockinfile:
        insertafter: "# peers"
        path: "/etc/wireguard/wg0.conf"
        block: |
          [Peer]
          PublicKey = {{ lookup('ansible.builtin.file', './tmp/' + item + '/tmp/wg/keypublic') }}
          AllowedIPs = {{ hostvars[item].sfwip }}/32
          Endpoint = {{ item }}:51871
        marker: "# {mark} peer {{ item }}"
      when: hostvars[item].sfwip == "10.0.0.10"
      loop: "{{ groups['sfw'] }}"

- name: enable wireguard
  hosts: self:sfw_manager:sfw_node
  remote_user: root
  become: true
  tasks:

    - name: enable custom wireguard service
      ansible.builtin.systemd_service:
        name: "wg-quick@wg0"
        state: restarted
        enabled: true

    # - name: end
    #   meta: end_play
